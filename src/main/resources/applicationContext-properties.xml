<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
	    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	    xmlns:context="http://www.springframework.org/schema/context"
	    xmlns:util="http://www.springframework.org/schema/util"
	    xsi:schemaLocation="
	        http://www.springframework.org/schema/beans
	        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	        http://www.springframework.org/schema/context
	        http://www.springframework.org/schema/context/spring-context-3.0.xsd
	        http://www.springframework.org/schema/util
	        http://www.springframework.org/schema/util/spring-util-3.0.xsd"
	    default-init-method="init"
	    default-destroy-method="destroy">


    <!--suppress SpringModelInspection -->
    <context:property-placeholder
                location="classpath:applicationContext.properties"
                properties-ref="applicationProperties"
                ignore-unresolvable="true"
                ignore-resource-not-found="true"
                order="10000"/>
    <!--suppress SpringModelInspection -->
    <util:properties id="applicationProperties">
        <prop key="facebook.clientId">177687295582534</prop>
        <prop key="facebook.clientSecret">32dc29f669ce9f97bc9bade3bdf1ca79</prop>
        <prop key="facebook.accessToken">177687295582534|zXC5wmZqodeHhTpUVXThov7zKrA</prop>
        <prop key="facebook.accessTokenUrl">
            https://graph.facebook.com/oauth/access_token?client_id=${facebook.clientId}&amp;client_secret=${facebook.clientSecret&amp;grant_type=client_credentials
        </prop>
        <prop key="facebook.redirectUrl">http://www.echoed.com</prop>

        <prop key="twitter.consumerKey">Gb6kawhjcWu3wLc9aWJqQ</prop>
        <prop key="twitter.consumerSecret">cpJ8p207SeDSiCvMVMeuBROS0j3KG421C2BrdePweS4</prop>
        <prop key="twitter.callbackUrl">http://www.echoed.com/twitter/login</prop>

        <prop key="cache.expireInMinutes">30</prop>
    </util:properties>

    <!-- NOTE: defining a separate properties object is an ugly hack to fix a bug in Akka's Spring integration where placeholder's
                were not getting resolved - see ActorFactoryBean#setProperties -->
    <!--suppress SpringModelInspection -->
    <util:properties id="facebookAccessActorProperties">
        <prop key="clientId">${facebook.clientId}</prop>
        <prop key="clientSecret">${facebook.clientSecret}</prop>
        <prop key="redirectUrl">${facebook.redirectUrl}</prop>
    </util:properties>

    <!--suppress SpringModelInspection -->
    <util:properties id="twitterAccessActorProperties">
        <prop key="consumerKey">${twitter.consumerKey}</prop>
        <prop key="consumerSecret">${twitter.consumerSecret}</prop>
        <prop key="callbackUrl">${twitter.callbackUrl}</prop>
    </util:properties>
</beans>
