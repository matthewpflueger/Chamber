<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
	    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	    xmlns:context="http://www.springframework.org/schema/context"
	    xmlns:util="http://www.springframework.org/schema/util"
	    xsi:schemaLocation="
	        http://www.springframework.org/schema/beans
	        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	        http://www.springframework.org/schema/context
	        http://www.springframework.org/schema/context/spring-context-3.2.xsd
	        http://www.springframework.org/schema/util
	        http://www.springframework.org/schema/util/spring-util-3.2.xsd"
	    default-init-method="init"
	    default-destroy-method="destroy">


    <context:property-placeholder
                system-properties-mode="ENVIRONMENT"
                location="classpath*:chamber*.properties,classpath:chamber-git.properties,classpath:${ENV_TYPE}.properties,classpath:${user.name}.properties"
                ignore-resource-not-found="true"
                local-override="false"
                properties-ref="defaultPropertyValues"/>

    <!--suppress SpringModelInspection -->
    <util:properties id="defaultPropertyValues">
        <prop key="envType">${ENV_TYPE}</prop>
        <prop key="port">8080</prop>

        <prop key="ssl.port">8443</prop>
        <prop key="ssl.keyPassword">Ech0ed1nc</prop>
        <prop key="ssl.keystore">/etc/keystore/Echoed20120224.keystore</prop>
        <prop key="ssl.disableInterceptor">false</prop>


        <prop key="context"></prop>
        <prop key="resourceBase">/var/www/current</prop>

        <prop key="springframework.applicationContext">classpath:applicationContext.xml</prop>
        <prop key="springframework.servletContext">classpath:servlet-context.xml</prop>

        <prop key="executor.minThreads">16</prop>
        <prop key="executor.maxThreads">256</prop>
        <prop key="executor.keepAlive">60000</prop>


        <prop key="domain">echoed.com</prop>
        <prop key="http.urls.site">http://${domain}</prop>
        <prop key="http.urls.api">http://${domain}</prop>
        <prop key="http.urls.cdn">http://v1-cdn.${domain}</prop>
        <prop key="http.urls.js">http://js.${domain}</prop>
        <prop key="http.urls.css">http://css.${domain}</prop>
        <prop key="http.urls.images">http://images.${domain}</prop>
        <prop key="http.urls.views">http://views.${domain}</prop>
        <prop key="http.urls.messages">http://messages.${domain}</prop>
        <prop key="http.urls.products">http://c10415403.r3.cf2.rackcdn.com</prop>

        <prop key="https.urls.site">https://${domain}</prop>
        <prop key="https.urls.api">https://${domain}</prop>
        <prop key="https.urls.cdn">https://c779203.ssl.cf2.rackcdn.com</prop>
        <prop key="https.urls.js">https://c779203.ssl.cf2.rackcdn.com</prop>
        <prop key="https.urls.css">https://c779203.ssl.cf2.rackcdn.com</prop>
        <prop key="https.urls.images">https://c779203.ssl.cf2.rackcdn.com</prop>
        <prop key="https.urls.views">https://c779203.ssl.cf2.rackcdn.com</prop>
        <prop key="https.urls.messages">https://c779203.ssl.cf2.rackcdn.com</prop>
        <prop key="https.urls.products">https://c10415403.ssl.cf2.rackcdn.com</prop>

        <prop key="scriptTagTemplate">&lt;script src="{{urls.js}}/%s"&gt;&lt;/script&gt;</prop>

        <prop key="blobstore.provider">cloudfiles-us</prop>
        <prop key="blobstore.identity">echoedinc</prop>
        <prop key="blobstore.credential">753478208613b74742190a7f5e07113c</prop>
        <prop key="blobstore.container">products</prop>
        <prop key="blobstore.containerUrl">${http.urls.products}</prop>


        <prop key="facebook.clientId">177687295582534</prop>
        <prop key="facebook.clientSecret">32dc29f669ce9f97bc9bade3bdf1ca79</prop>
        <prop key="facebook.appAccessToken">177687295582534|zXC5wmZqodeHhTpUVXThov7zKrA</prop>
        <prop key="facebook.canvasApp">http://apps.facebook.com/echoedapp/</prop>
        <prop key="facebook.appNameSpace">echoedapp</prop>

        <prop key="facebook.accessToken">177687295582534|zXC5wmZqodeHhTpUVXThov7zKrA</prop>
        <prop key="facebook.accessTokenUrl">
            https://graph.facebook.com/oauth/access_token?client_id=${facebook.clientId}&amp;client_secret=${facebook.clientSecret}&amp;grant_type=client_credentials
        </prop>
        <prop key="facebook.redirectUrl">${https.urls.site}</prop>

        <prop key="twitter.consumerKey">Gb6kawhjcWu3wLc9aWJqQ</prop>
        <prop key="twitter.consumerSecret">cpJ8p207SeDSiCvMVMeuBROS0j3KG421C2BrdePweS4</prop>
        <prop key="twitter.callbackUrl">${http.urls.site}/twitter/login</prop>

        <prop key="cache.expireInMinutes">30</prop>


        <prop key="git.branch"></prop>
        <prop key="git.build.user.name"></prop>
        <prop key="git.build.user.email"></prop>
        <prop key="git.build.time"></prop>
        <prop key="git.commit.id"></prop>
        <prop key="git.commit.id.abbrev"></prop>
        <prop key="git.commit.user.name"></prop>
        <prop key="git.commit.user.email"></prop>
        <prop key="git.commit.message.full"></prop>
        <prop key="git.commit.message.short"></prop>
        <prop key="git.commit.time"></prop>


        <prop key="version">${git.commit.id.abbrev}</prop>


        <prop key="jdbc.driverClassName">com.mysql.jdbc.Driver</prop>
        <prop key="jdbc.url">jdbc:mysql://localhost:3306/Echoed</prop>
        <prop key="jdbc.username">root</prop>
        <prop key="jdbc.password">password</prop>
        <prop key="jdbc.timeout">10</prop>

        <prop key="pool.initialSize">5</prop>
        <prop key="pool.minIdle">5</prop>
        <prop key="pool.maxIdle">10</prop>
        <prop key="pool.maxActive">50</prop>
        <prop key="pool.maxWait">3000</prop>

        <prop key="pool.numTestsPerEvictionRun">50</prop>
        <prop key="pool.timeBetweenEvictionRunsMillis">60000</prop>
        <prop key="pool.testWhileIdle">true</prop>
        <prop key="pool.testOnBorrow">true</prop>
        <prop key="pool.validationQuery">select 1</prop>
        <prop key="pool.validationQueryTimeout">500</prop>

        <prop key="pool.removeAbandoned">true</prop>
        <prop key="pool.removeAbandonedTimeout">60000</prop>
        <prop key="pool.logAbandoned">true</prop>


        <prop key="geolocation.serviceUrl">http://www.ipaddressapi.com/l/50fef98b6b9e054b97e695187dde7a3d9a071e7881eb?h=</prop>
        <prop key="geolocation.lastUpdatedBeforeHours">24</prop>


        <prop key="mustache.cache">false</prop>
        <prop key="mustache.prefix">classpath:cdn/${version}</prop>
        <!--<prop key="mustache.prefix">${http.urls.views}/${version}</prop>-->
        <prop key="mustache.suffix">.html</prop>
        <prop key="mustache.defaultValue"> </prop>


        <prop key="apiUrl">${http.urls.api}</prop>

        <prop key="echoJsUrl">${http.urls.site}/echo/js</prop>
        <prop key="echoRequestUrl">${http.urls.site}/echo/request</prop>
        <prop key="echoLoginUrl">${http.urls.site}/echo/login</prop>
        <prop key="echoConfirmUrl">${http.urls.site}/echo/confirm</prop>
        <prop key="echoFinishUrl">${http.urls.site}/echo/finish</prop>
        <prop key="echoCloseUrl">${http.urls.site}/echo/close</prop>
        <prop key="echoRegisterUrl">${http.urls.site}/echo/register</prop>
        <prop key="echoEchoedUrl">${http.urls.site}/echo/echoed</prop>

        <prop key="echoUrl">${http.urls.site}/echo</prop>
        <prop key="echoItUrl">${http.urls.site}/echo/it</prop>
        <prop key="buttonUrl">${http.urls.site}/echo/button</prop>
        <prop key="closetUrl">${http.urls.site}</prop>
        <prop key="confirmUrl">${http.urls.site}/echo</prop>

        <prop key="buttonViewUrl">${http.urls.images}/button_echoed.png</prop>

        <prop key="twitterController.loginRedirectUrl">http://www.twitter.com</prop>


        <prop key="exhibitUrl">${http.urls.api}/user/exhibit</prop>
        <prop key="friendsUrl">${http.urls.api}/user/friends</prop>
        <prop key="dashboardUrl">${https.urls.site}/partner/dashboard</prop>
        <prop key="integrationUrl">${https.urls.site}/partner/integration</prop>
        <prop key="adminDashboardUrl">${https.urls.site}/admin/dashboard</prop>


        <prop key="mail.imap.host">imap.gmail.com</prop>
        <prop key="mail.imap.user">no-reply@echoed.com</prop>
        <prop key="mail.imap.password">Ech0edMa1l</prop>

        <prop key="mail.from">no-reply@echoed.com</prop>
        <prop key="mail.smtp.user">echoedinc</prop>
        <prop key="mail.smtp.password">Ech0ed1nc</prop>
        <prop key="mail.smtp.host">smtp.sendgrid.net</prop>
        <prop key="mail.smtp.port">465</prop>
        <prop key="mail.smtp.auth">true</prop>
        <prop key="mail.smtp.socketFactory.port">${mail.smtp.port}</prop>
        <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
        <prop key="mail.development">false</prop>
        <prop key="mail.developmentRecipient">developers@echoed.com</prop>

        <prop key="echoed.secret">PHHabG5MSw6hv4lZJg-Ppg</prop>

        <!-- to add our app http://<your store>.shopify.com/admin/api/auth?api_key= -->
        <prop key="shopify.apiKey">a2838f71f19944f9291104f70ba3a5f7</prop>
        <prop key="shopify.sharedSecret">d27b867254075a772b67572fa0ea74c4</prop>

        <!-- http://www.networksolutions.com/support/public-api-documentation -->
        <prop key="networksolutions.application">Echoed</prop>
        <prop key="networksolutions.certificate">e33f5dbeabf9492fa9d3beea52216e81</prop>

        <prop key="accountManagerEmail">accountmanager@echoed.com</prop>


        <!-- cache expiration configs zero or less does not expire -->
        <prop key="cache.PartnerServices">-1</prop>
        <prop key="cache.MagentoGoSessions">14</prop>

        <prop key="cloudinary.name">echoed</prop>
        <prop key="cloudinary.apiKey">921488723881834</prop>
        <prop key="cloudinary.secret">3t7CPs_VOcKQa7kGIloKpBI8Tk4</prop>
        <prop key="cloudinary.callback">${http.urls.site}/story/image/callback</prop>
        <prop key="cloudinary.endpoint">https://api.cloudinary.com/v1_1/${cloudinary.name}/image/upload</prop>

        <prop key="bookmarklet.name">Echo It</prop>
    </util:properties>


    <util:properties id="serverProperties">
        <prop key="envType">${envType}</prop>
        <prop key="port">${port}</prop>

        <prop key="ssl.port">${ssl.port}</prop>
        <prop key="ssl.keyPassword">${ssl.keyPassword}</prop>
        <prop key="ssl.keystore">${ssl.keystore}</prop>

        <prop key="context">${context}</prop>
        <prop key="resourceBase">${resourceBase}</prop>

        <prop key="springframework.applicationContext">${springframework.applicationContext}</prop>
        <prop key="springframework.servletContext">${springframework.servletContext}</prop>

        <prop key="executor.minThreads">${executor.minThreads}</prop>
        <prop key="executor.maxThreads">${executor.maxThreads}</prop>
        <prop key="executor.keepAlive">${executor.keepAlive}</prop>
    </util:properties>


    <util:properties id="cacheProperties">
        <prop key="PartnerServices">${cache.PartnerServices}</prop>
        <prop key="MagentoGoSessions">${cache.MagentoGoSessions}</prop>
    </util:properties>


    <util:properties id="mailProperties">
        <prop key="mail.imap.host">${mail.imap.host}</prop>
        <prop key="mail.imap.user">${mail.imap.user}</prop>
        <prop key="mail.imap.password">${mail.imap.password}</prop>
        <prop key="mail.from">${mail.from}</prop>
        <prop key="mail.user">${mail.smtp.user}</prop>
        <prop key="mail.password">${mail.smtp.password}</prop>
        <prop key="mail.smtp.host">${mail.smtp.host}</prop>
        <prop key="mail.smtp.port">${mail.smtp.port}</prop>
        <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
        <prop key="mail.smtp.socketFactory.port">${mail.smtp.socketFactory.port}</prop>
        <prop key="mail.smtp.socketFactory.class">${mail.smtp.socketFactory.class}</prop>
        <prop key="accountManagerEmail">${accountManagerEmail}</prop>
        <prop key="mail.development">${mail.development}</prop>
        <prop key="mail.developmentRecipient">${mail.developmentRecipient}</prop>
    </util:properties>


    <util:properties id="urlsProperties">
        <prop key="http.urls.site">${http.urls.site}</prop>
        <prop key="http.urls.api">${http.urls.api}</prop>
        <prop key="http.urls.cdn">${http.urls.cdn}</prop>
        <prop key="http.urls.js">${http.urls.js}</prop>
        <prop key="http.urls.css">${http.urls.css}</prop>
        <prop key="http.urls.images">${http.urls.images}</prop>
        <prop key="http.urls.views">${http.urls.views}</prop>

        <prop key="https.urls.site">${https.urls.site}</prop>
        <prop key="https.urls.api">${https.urls.api}</prop>
        <prop key="https.urls.cdn">${https.urls.cdn}</prop>
        <prop key="https.urls.js">${https.urls.js}</prop>
        <prop key="https.urls.css">${https.urls.css}</prop>
        <prop key="https.urls.images">${https.urls.images}</prop>
        <prop key="https.urls.views">${https.urls.views}</prop>

        <prop key="echoClickUrl">${http.urls.site}/echo</prop>
        <prop key="storyGraphUrl">${http.urls.site}/graph/story/</prop>
    </util:properties>


    <!--suppress SpringModelInspection -->
    <util:properties id="gitProperties">
        <prop key="git.branch">${git.branch}</prop>
        <prop key="git.build.user.name">${git.build.user.name}</prop>
        <prop key="git.build.user.email">${git.build.user.email}</prop>
        <prop key="git.build.time">${git.build.time}</prop>
        <prop key="git.commit.id">${git.commit.id}</prop>
        <prop key="git.commit.id.abbrev">${git.commit.id.abbrev}</prop>
        <prop key="git.commit.user.name">${git.commit.user.name}</prop>
        <prop key="git.commit.user.email">${git.commit.user.email}</prop>
        <prop key="git.commit.message.full">${git.commit.message.full}</prop>
        <prop key="git.commit.message.short">${git.commit.message.short}</prop>
        <prop key="git.commit.time">${git.commit.time}</prop>
    </util:properties>


    <!-- NOTE: defining a separate properties object is an ugly hack to fix a bug in Akka's Spring integration where placeholder's
               were not getting resolved - see ActorFactoryBean#setProperties -->
    <!--suppress SpringModelInspection -->
    <util:properties id="facebookAccessProperties">
        <prop key="clientId">${facebook.clientId}</prop>
        <prop key="clientSecret">${facebook.clientSecret}</prop>
        <prop key="redirectUrl">${facebook.redirectUrl}</prop>
        <prop key="appAccessToken">${facebook.appAccessToken}</prop>
        <prop key="canvasApp">${facebook.canvasApp}</prop>
        <prop key="appNameSpace">${facebook.appNameSpace}</prop>
    </util:properties>


    <!--suppress SpringModelInspection -->
    <util:properties id="twitterAccessProperties">
        <prop key="consumerKey">${twitter.consumerKey}</prop>
        <prop key="consumerSecret">${twitter.consumerSecret}</prop>
        <prop key="callbackUrl">${twitter.callbackUrl}</prop>
    </util:properties>


    <!--suppress SpringModelInspection -->
    <util:properties id="shopifyProperties">
        <prop key="shopifyApiKey">${shopify.apiKey}</prop>
        <prop key="shopifySecret">${shopify.sharedSecret}</prop>
        <prop key="accountManagerEmail">${accountManagerEmail}</prop>
    </util:properties>


    <!--suppress SpringModelInspection -->
    <util:properties id="networkSolutionsProperties">
        <prop key="application">${networksolutions.application}</prop>
        <prop key="certificate">${networksolutions.certificate}</prop>
        <prop key="accountManagerEmail">${accountManagerEmail}</prop>
    </util:properties>


    <!--suppress SpringModelInspection -->
    <util:properties id="bigCommerceProperties">
        <prop key="accountManagerEmail">${accountManagerEmail}</prop>
    </util:properties>


    <!--suppress SpringModelInspection -->
    <util:properties id="magentoGoProperties">
        <prop key="accountManagerEmail">${accountManagerEmail}</prop>
    </util:properties>


    <!--suppress SpringModelInspection -->
    <util:properties id="geoLocationProperties">
        <prop key="geoLocationServiceUrl">${geolocation.serviceUrl}</prop>
        <prop key="lastUpdatedBeforeHours">${geolocation.lastUpdatedBeforeHours}</prop>
    </util:properties>


    <util:properties id="cloudinaryProperties">
        <prop key="name">${cloudinary.name}</prop>
        <prop key="apiKey">${cloudinary.apiKey}</prop>
        <prop key="secret">${cloudinary.secret}</prop>
        <prop key="callback">${cloudinary.callback}</prop>
        <prop key="endpoint">${cloudinary.endpoint}</prop>
    </util:properties>
</beans>

