<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.echoed.chamber.dao.FacebookPostDao">

    <cache-ref namespace="com.echoed.chamber.dao.cache.Default" />

    <resultMap id="facebookPostResult" type="com.echoed.chamber.domain.FacebookPost">
        <constructor>
            <idArg column="id" javaType="String" />
            <arg column="updatedOn" javaType="Date" />
            <arg column="createdOn" javaType="Date" />
            <arg column="name" javaType="String"/>
            <arg column="message" javaType="String" />
            <arg column="caption" javaType="String"/>
            <arg column="picture" javaType="String" />
            <arg column="link" javaType="String" />
            <arg column="facebookUserId" javaType="String" />
            <arg column="echoedUserId" javaType="String" />
            <arg column="echoId" javaType="String" />
            <arg column="postedOn" javaType="Date" />
            <arg column="facebookId" javaType="String" />
            <arg column="crawledStatus" javaType="String" />
            <arg column="crawledOn" javaType="Date" />
            <arg column="retries" javaType="_int" />
        </constructor>
    </resultMap>

    <resultMap id="facebookUserResult" type="com.echoed.chamber.domain.FacebookUser">
        <constructor>
            <idArg column="facebookUserId" javaType="String" />
            <arg column="facebookUserUpdatedOn" javaType="Date" />
			<arg column="facebookUserCreatedOn" javaType="Date" />
            <arg column="facebookUserEchoedUserId" javaType="String" />
            <arg column="facebookUserFacebookId" javaType="String" />
            <arg column="facebookUserName" javaType="String" />
            <arg column="facebookUserEmail" javaType="String" />
			<arg column="facebookUserLink" javaType="String" />
			<arg column="facebookUserGender" javaType="String" />
			<arg column="facebookUserTimezone" javaType="String" />
			<arg column="facebookUserLocale" javaType="String" />
			<arg column="facebookUserAccessToken" javaType="String" />
        </constructor>
    </resultMap>

    <resultMap id="facebookPostDataResult" type="com.echoed.chamber.domain.views.FacebookPostData">
        <constructor>
            <idArg column="id" javaType="String" />
            <arg javaType="com.echoed.chamber.domain.FacebookPost" resultMap="facebookPostResult" />
            <arg javaType="com.echoed.chamber.domain.FacebookUser" resultMap="facebookUserResult" />
        </constructor>
    </resultMap>


    <select id="findByEchoId" resultMap="facebookPostResult">
    	select * from FacebookPost where echoId = #{echoId}
    </select>

    <select id="findByEchoedUserId" resultMap="facebookPostResult">
    	select * from FacebookPost where echoedUserId = #{echoedUserId}
    </select>

    <sql id="postToCrawlColumns">
        FP.*,
        FU.id as facebookUserId,
        FU.updatedOn as facebookUserUpdatedOn,
        FU.createdOn as facebookUserCreatedOn,
        FU.echoedUserId as facebookUserEchoedUserId,
        FU.facebookId as facebookUserFacebookId,
        FU.name as facebookUserName,
        FU.email as facebookUserEmail,
        FU.link as facebookUserLink,
        FU.gender as facebookUserGender,
        FU.timezone as facebookUserTimezone,
        FU.locale as facebookUserLocale,
        FU.accessToken as facebookUserAccessToken
    </sql>

    <select id="findPostToCrawl" resultMap="facebookPostDataResult" useCache="false">
        select <include refid="postToCrawlColumns" />
        from FacebookPost FP
        inner join FacebookUser FU on FP.facebookUserId = FU.id
        where FP.facebookId is not null
        <if test="echoedUserId != null">
            and FP.echoedUserId = #{echoedUserId}
        </if>
        and FP.postedOn between #{postedOnStartDate} and #{postedOnEndDate}
        and (FP.crawledOn is null or FP.crawledOn &lt; #{crawledOnEndDate})
        and FP.retries &lt; 3
        order by FP.crawledOn asc
        limit 1;
    </select>

    <select id="findOldPostToCrawl" resultMap="facebookPostDataResult" useCache="false">
        select <include refid="postToCrawlColumns" />
        from FacebookPost FP
        inner join FacebookUser FU on FP.facebookUserId = FU.id
        where FP.facebookId is not null
        <if test="echoedUserId != null">
            and FP.echoedUserId = #{echoedUserId}
        </if>
        and FP.crawledOn &lt; #{crawledOnEndDate}
        and FP.postedOn &lt; #{postedOnBeforeDate}
        and FP.retries &lt; 3
        order by FP.postedOn desc
        limit 1;
    </select>

    <insert id="insert" parameterType="com.echoed.chamber.domain.FacebookPost">
    	insert into FacebookPost(
                id,
                createdOn,
                name,
                message,
                caption,
                picture,
                link,
                facebookUserId,
                echoedUserId,
                echoId,
                postedOn,
                facebookId,
                crawledStatus,
                crawledOn)
        values (
                #{id},
                #{createdOn},
                #{name},
                #{message},
                #{caption},
                #{picture},
                #{link},
                #{facebookUserId},
                #{echoedUserId},
                #{echoId},
                #{postedOn},
                #{facebookId},
                #{crawledStatus},
                #{crawledOn})
    </insert>

    <update id="updatePostedOn" parameterType="com.echoed.chamber.domain.FacebookPost">
        update FacebookPost set
                postedOn=#{postedOn},
                facebookId=#{facebookId}
            where id=#{id}
    </update>

    <update id="updatePostForCrawl" parameterType="com.echoed.chamber.domain.FacebookPost">
        update FacebookPost set
                crawledOn=#{crawledOn},
                crawledStatus=#{crawledStatus},
                retries=#{retries}
            where id=#{id}
    </update>

    <update id="resetPostsToCrawl">
        update FacebookPost set
                retries = 0
            where facebookUserId = #{facebookUserId}
    </update>

    <delete id="deleteByEchoedUserId">
        delete from FacebookPost where echoedUserId=#{echoedUserId}
    </delete>

</mapper>
