<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.echoed.chamber.dao.EchoMetricsDao">

    <cache-ref namespace="com.echoed.chamber.dao.cache.Default" />

    <resultMap id="echoMetricsResult" type="com.echoed.chamber.domain.EchoMetrics">
        <constructor>
            <idArg column="id" javaType="String" />
            <arg column="updatedOn" javaType="Date" />
            <arg column="createdOn" javaType="Date" />
            <arg column="echoId" javaType="String" />
            <arg column="echoedUserId" javaType="String" />
            <arg column="partnerId" javaType="String" />
            <arg column="partnerSettingsId" javaType="String" />
            <arg column="price" javaType="_float" />
            <arg column="creditWindowEndsAt" javaType="Date" />
            <arg column="totalClicks" javaType="_int" />
            <arg column="clicks" javaType="_int" />
            <arg column="credit" javaType="_float" />
            <arg column="fee" javaType="_float" />
            <arg column="residualClicks" javaType="_int" />
            <arg column="residualCredit" javaType="_float" />
            <arg column="residualFee" javaType="_float" />
        </constructor>
    </resultMap>

    <select id="findById" resultMap="echoMetricsResult">
        select * from EchoMetrics where id = #{id}
    </select>

    <select id="findByEchoId" resultMap="echoMetricsResult">
    	select * from EchoMetrics where echoId = #{echoId}
    </select>

    <select id="findByEchoedUserId" resultMap="echoMetricsResult">
    	select * from EchoMetrics where echoedUserId = #{echoedUserId}
    </select>

    <select id="findByPartnerId" resultMap="echoMetricsResult">
    	select * from EchoMetrics where partnerId = #{partnerId}
    </select>

    <select id="findByPartnerSettingsId" resultMap="echoMetricsResult">
    	select * from EchoMetrics where partnerSettingsId = #{partnerSettingsId}
    </select>

    <insert id="insert" parameterType="com.echoed.chamber.domain.EchoMetrics">
    	insert into EchoMetrics(
    			id,
    			createdOn,
                echoId,
                echoedUserId,
                partnerId,
                partnerSettingsId,
                price,
                creditWindowEndsAt,
                totalClicks,
                clicks,
                credit,
                fee,
                residualClicks,
                residualCredit,
                residualFee)
        values (
                #{id},
                #{createdOn},
                #{echoId},
                #{echoedUserId},
                #{partnerId},
                #{partnerSettingsId},
                #{price},
                #{creditWindowEndsAt},
                #{totalClicks},
                #{clicks},
                #{credit},
                #{fee},
                #{residualClicks},
                #{residualCredit},
                #{residualFee})
    </insert>

    <update id="updateForEcho" parameterType="com.echoed.chamber.domain.EchoMetrics">
        update EchoMetrics set
            echoedUserId = #{echoedUserId},
            creditWindowEndsAt = #{creditWindowEndsAt},
            totalClicks = #{totalClicks},
            clicks = #{clicks},
            credit = #{credit},
            fee = #{fee},
            residualClicks = #{residualClicks},
            residualCredit = #{residualCredit},
            residualFee = #{residualFee}
        where
            id = #{id}
    </update>

    <update id="updateForClick" parameterType="com.echoed.chamber.domain.EchoMetrics">
        update EchoMetrics set
            totalClicks = #{totalClicks},
            clicks = #{clicks},
            credit = #{credit},
            fee = #{fee},
            residualClicks = #{residualClicks},
            residualCredit = #{residualCredit},
            residualFee = #{residualFee}
        where
            id = #{id}
    </update>

    <delete id="deleteByEchoId">
        delete from EchoMetrics where echoId=#{echoId}
    </delete>

    <delete id="deleteByEchoedUserId">
        delete from EchoMetrics where echoedUserId=#{echoedUserId}
    </delete>

    <delete id="deleteByPartnerId">
        delete from EchoMetrics where partnerId=#{partnerId}
    </delete>

    <delete id="deleteByPartnerSettingsId">
        delete from EchoMetrics where partnerSettingsId=#{partnerSettingsId}
    </delete>

</mapper>
