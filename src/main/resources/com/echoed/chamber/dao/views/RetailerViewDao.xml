<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.echoed.chamber.dao.views.RetailerViewDao">

    <cache-ref namespace="com.echoed.chamber.dao.cache.Flushing30" />
    
    <resultMap id="echoedUser" type="com.echoed.chamber.domain.EchoedUser">
        <constructor>
            <idArg column="id" javaType="String"/>
            <arg column="updatedOn" javaType = "Date"/>
            <arg column="createdOn" javaType = "Date"/>
            <arg column="name" javaType="String"/>
            <arg column="email" javaType="String"/>
            <arg column="screenName" javaType="String"/>
            <arg column="facebookUserId" javaType="String"/>
            <arg column="facebookId" javaType="String"/>
            <arg column="twitterUserId" javaType="String"/>
            <arg column="facebookUserId" javaType="String"/>
        </constructor>
    </resultMap>

    <resultMap id="retailerSocialSummaryResult" type="com.echoed.chamber.domain.views.RetailerSocialSummary">
        <constructor>
            <idArg column="retailerId" javaType="String"/>
            <arg column="retailerName" javaType="String" />
            <arg column="totalEchoes" javaType="_int" />
            <arg column="totalFacebookLikes" javaType="_int" />
            <arg column="totalFacebookComments" javaType="_int" />
            <arg column="totalEchoClicks" javaType="_int"/>
        </constructor>
    </resultMap>

    <resultMap id="retailerProductsListView" type="com.echoed.chamber.domain.views.RetailerProductsListView">
        <constructor>
            <idArg column="retailerId" javaType="String"/>
            <arg column="retailerName" javaType="String"/>
        </constructor>
        <collection property="products" ofType="com.echoed.chamber.domain.views.ProductSocialSummary" javaType="ArrayList" resultMap="productSocialSummaryResult"/>
    </resultMap>
    
    <resultMap id="retailerProductSocialActivityByDate" type="com.echoed.chamber.domain.views.RetailerProductSocialActivityByDate">
        <constructor>
            <idArg column="retailerId" javaType="String"/>
            <arg column="retailerName" javaType="String"/>
            <arg column="activityType"  javaType="String"/>
        </constructor>
        <collection property="activityType" ofType="com.echoed.chamber.domain.views.SocialActivityTotalByDate" javaType="ArrayList" resultMap="socialActivityTotalByDate"/>
    </resultMap>
    
    <resultMap id="productSocialActivityTotal" type="com.echoed.chamber.domain.views.ProductSocialActivityTotal">
        <constructor>
            <idArg column="retailerId" javaType="String"/>
            <arg column="productId" javaType="String"/>
            <arg column="productName" javaType="String"/>
            <arg column="total" javaType= "_int"/>
        </constructor>
    </resultMap>

    <resultMap id="socialActivityTotalByDate" type="com.echoed.chamber.domain.views.SocialActivityTotalByDate">
        <constructor>
            <idArg column="date" javaType="Date"/>
            <arg column="total" javaType="_int"/>
        </constructor>
    </resultMap>

    <resultMap id="productSocialSummaryResult" type="com.echoed.chamber.domain.views.ProductSocialSummary">
        <constructor>
            <idArg column="productId" javaType="String" />
            <arg column="productName" javaType="String" />
            <arg column="productBrand" javaType="String" />
            <arg column="productCategory" javaType="String" />
            <arg column="retailerId" javaType="String" />
            <arg column="retailerName" javaType="String" />
            <arg column="productImageUrl" javaType="String" />
            <arg column="totalEchoes" javaType="_int" />
            <arg column="totalFacebookLikes" javaType="_int" />
            <arg column="totalFacebookComments" javaType="_int" />
            <arg column="totalEchoClicks" javaType="_int"/>
        </constructor>
    </resultMap>

    <resultMap id="retailerCustomerListView" type="com.echoed.chamber.domain.views.RetailerCustomerListView">
        <constructor>
            <idArg column="retailerId" javaType="String"/>
            <arg column="retailerName" javaType="String"/>
        </constructor>
        <collection property="customers" ofType="com.echoed.chamber.domain.views.CustomerSocialSummary" javaType="ArrayList" resultMap="customerSocialSummaryResult"/>
    </resultMap>

    <resultMap id="customerSocialSummaryResult" type="com.echoed.chamber.domain.views.CustomerSocialSummary">
        <constructor>
            <idArg column="echoedUserId" javaType="String" />
            <arg column="echoedUserName" javaType="String"/>
            <arg column="totalEchoes" javaType="_int" />
            <arg column="totalFacebookLikes" javaType="_int" />
            <arg column="totalFacebookComments" javaType="_int" />
            <arg column="totalEchoClicks" javaType="_int"/>
            <arg column="totalFacebookFriends" javaType="_int"/>
        </constructor>
    </resultMap>
    
    <resultMap id="comments" type="com.echoed.chamber.domain.FacebookComment">
        <constructor>
            <idArg column="id" javaType="String" />
            <arg column="updatedOn" javaType="Date" />
            <arg column="createdOn" javaType="Date" />
            <arg column="facebookPostId" javaType="String" />
            <arg column="facebookUserId" javaType="String" />
            <arg column="echoedUserId" javaType="String" />
            <arg column="facebookId" javaType="String" />
            <arg column="byFacebookId" javaType="String" />
            <arg column="name" javaType="String" />
            <arg column="message" javaType="String" />
            <arg column="createdAt" javaType="Date" />
        </constructor>
    </resultMap>

    <sql id="productColumns">
        E.productId as productId,
        coalesce (E.productName) as productName,
        coalesce (E.brand) as productBrand,
        coalesce (E.category) as productCategory,
        coalesce (R.id) as retailerId,
        coalesce (R.name) as retailerName,
        coalesce(E.imageUrl) as productImageUrl,
        count(E.id) as totalEchoes,
        coalesce(sum(ESA.facebookLikes), 0) as totalFacebookLikes,
        coalesce(sum(ESA.facebookComments), 0) as totalFacebookComments,
        coalesce(sum(ESA.echoClicks), 0) as totalEchoClicks
    </sql>

    <sql id="aggregateSalesByRetailerIdAndProductId">
        (
            SELECT
                EP.productId as productId
                EP.retailerId as retailerId
                sum(EP.price) as totalSales
            GROUP BY
                EP.productId,
                EP.retailerId
        )
    </sql>

    <sql id="aggregateStatsByEcho">
        (
            SELECT
                E.id as echoId,
                sum(FBL.likes) as facebookLikes,
                sum(FBC.comments) as facebookComments,
                sum(EC.echoClicks) as echoClicks
            FROM
                Echo E
                LEFT OUTER JOIN
                FacebookPost FBP ON FBP.echoId = E.id
                LEFT OUTER JOIN
                (
                    SELECT
                        facebookPostId,
                        count(id) as likes
                    FROM
                        FacebookLike
                    GROUP BY
                        facebookPostId
                )
                FBL ON FBL.facebookPostId = FBP.id
                LEFT OUTER JOIN
                (
                    SELECT
                        facebookPostId,
                        count(id) as comments
                    FROM
                        FacebookComment
                    GROUP BY
                        facebookPostId
                )
                FBC ON FBC.facebookPostId = FBP.id
                LEFT OUTER JOIN
                (
                    SELECT
                        echoId,
                        count(id) as echoClicks
                    FROM
                        EchoClick
                    GROUP BY
                        echoId
                )
                EC ON E.id = EC.echoId
            GROUP BY
                E.id
        )
    </sql>

    <sql id="friendsAggregate">
        (
            SELECT
                FacebookUser.echoedUserId,
                count(FacebookFriend.id) as facebookFriends
            FROM
                FacebookUser
                LEFT OUTER JOIN
                FacebookFriend ON FacebookUser.id = FacebookFriend.facebookUserId
            GROUP BY
                FacebookUser.echoedUserId
        )
    </sql>


    <select id="getTopProductsWithRetailerId" resultMap="retailerProductsListView">
        SELECT <include refid="productColumns" />
        FROM
            Retailer R
            LEFT OUTER JOIN
            Echo E ON R.id = E.retailerId
            LEFT OUTER JOIN
            <include refid="aggregateStatsByEcho" />
            ESA ON E.id=ESA.echoId
        WHERE
            R.id = #{retailerId}
        GROUP BY
            R.id, R.name, E.productId, E.productName, E.brand, E.category
        ORDER BY
            totalEchoes DESC
        LIMIT
            0, 5
    </select>

    <select id="getProductsWithRetailerId" resultMap="retailerProductsListView">
        SELECT <include refid="productColumns" />
        FROM
        Retailer R
        LEFT OUTER JOIN
        Echo E ON R.id = E.retailerId
        LEFT OUTER JOIN
        <include refid="aggregateStatsByEcho" />
        ESA ON E.id=ESA.echoId
        WHERE
        R.id = #{retailerId}
        GROUP BY
        R.id, R.name, E.productId, E.productName, E.brand, E.category
        ORDER BY
        totalEchoes DESC
        LIMIT
        #{start}, #{limit}
    </select>


    <select id="getSocialActivityByProductIdAndRetailerId" resultMap="productSocialSummaryResult">
        SELECT <include refid="productColumns" />
        FROM
            Retailer R
            LEFT OUTER JOIN
            Echo E ON R.id = E.retailerId
            LEFT OUTER JOIN
            <include refid="aggregateStatsByEcho" />
            ESA on E.id=ESA.echoId
        WHERE
            R.id = #{retailerId}
            AND
            E.productId = #{productId}
        GROUP BY
            R.id, R.name, E.productId, E.productName
    </select>

    <select id="getTotalFacebookLikesByRetailerIdProductId" resultMap="productSocialActivityTotal">
        SELECT
            R.id as retailerId,
            E.productId as productId,
            E.productName as productName,
            count(FBL.id) as total
        FROM
            Retailer R
            LEFT OUTER JOIN
            Echo E ON R.id = E.retailerId
            LEFT OUTER JOIN
            FacebookPost FBP ON FBP.echoId = E.id
            LEFT OUTER JOIN
            FacebookLike FBL ON FBP.id = FBL.facebookPostId
        WHERE
            R.id = #{retailerId}
            AND
            E.productId= #{productId}
        GROUP BY
            R.id, E.productId, E.productName
    </select>

    <select id="getTotalFacebookCommentsByRetailerIdProductId" resultMap="productSocialActivityTotal">
        SELECT
            R.id as retailerId,
            E.productId as productId,
            E.productName as productName,
            count(FBC.id) as total
        FROM
            Retailer R
            LEFT OUTER JOIN
            Echo E ON R.id = E.retailerId
            LEFT OUTER JOIN
            FacebookPost FBP ON FBP.echoId = E.id
            LEFT OUTER JOIN
            FacebookComment FBC ON FBP.id = FBC.facebookPostId
        WHERE
            R.id = #{retailerId}
            AND
            E.productId= #{productId}
        GROUP BY
            R.id, E.productId, E.productName
    </select>

    <select id="getTotalEchoClicksByRetailerIdProductId" resultMap="productSocialActivityTotal">
        SELECT
            R.id as retailerId,
            E.productId as productId,
            E.productName as productName,
            count(EC.id) as total
        FROM
            Retailer R
            LEFT OUTER JOIN
            Echo E ON R.id = E.retailerId
            LEFT OUTER JOIN
            EchoClick EC ON EC.echoId = E.id
        WHERE
            R.id = #{retailerId}
            AND
            E.productId= #{productId}
        GROUP BY
            R.id, E.productId, E.productName
    </select>

    <select id="getTopCustomersWithRetailerId" resultMap="retailerCustomerListView" >
        SELECT
            R.id as retailerId,
            R.name as retailerName,
            EU.id as echoedUserId,
            EU.name as echoedUserName,
            count(E.id) as totalEchoes,
            coalesce(sum(ESA.facebookLikes), 0) as totalFacebookLikes,
            coalesce(sum(ESA.facebookComments), 0) as totalFacebookComments,
            coalesce(sum(ESA.echoClicks), 0) as totalEchoClicks,
            coalesce(FF.facebookFriends, 0) as totalFacebookFriends
         FROM
            Retailer R
            LEFT OUTER JOIN
            Echo E ON R.id = E.retailerId
            LEFT OUTER JOIN
            EchoedUser EU ON  E.echoedUserId = EU.id
            LEFT OUTER JOIN
            <include refid="aggregateStatsByEcho" />
            ESA ON E.id = ESA.echoId
            LEFT OUTER JOIN
            <include refid="friendsAggregate" />
            FF ON FF.echoedUserId=EU.id
        WHERE
            R.id = #{retailerId}
        GROUP BY
            R.id, R.name, EU.id, EU.name
        LIMIT
            0,5
    </select>


    <select id="getCustomersWithRetailerId" resultMap="retailerCustomerListView" >
        SELECT
        R.id as retailerId,
        R.name as retailerName,
        EU.id as echoedUserId,
        EU.name as echoedUserName,
        count(E.id) as totalEchoes,
        coalesce(sum(ESA.facebookLikes), 0) as totalFacebookLikes,
        coalesce(sum(ESA.facebookComments), 0) as totalFacebookComments,
        coalesce(sum(ESA.echoClicks), 0) as totalEchoClicks,
        coalesce(FF.facebookFriends, 0) as totalFacebookFriends
        FROM
        Retailer R
        LEFT OUTER JOIN
        Echo E ON R.id = E.retailerId
        LEFT OUTER JOIN
        EchoedUser EU ON  E.echoedUserId = EU.id
        LEFT OUTER JOIN
        <include refid="aggregateStatsByEcho" />
        ESA ON E.id = ESA.echoId
        LEFT OUTER JOIN
        <include refid="friendsAggregate" />
        FF ON FF.echoedUserId=EU.id
        WHERE
        R.id = #{retailerId}
        GROUP BY
        R.id, R.name, EU.id, EU.name
        LIMIT
        #{start},#{limit}
    </select>

    <select id="getSocialActivityByRetailerId" resultMap="retailerSocialSummaryResult">
       SELECT
            R.id as retailerId,
            R.name as retailerName,
            count(E.id) as totalEchoes,
            coalesce(sum(ESA.facebookLikes), 0) as totalFacebookLikes,
            coalesce(sum(ESA.facebookComments), 0) as totalFacebookComments,
            coalesce(sum(ESA.echoClicks), 0) as totalEchoClicks
        FROM
            Retailer R
            LEFT OUTER JOIN
            Echo E ON R.id = E.retailerId
            LEFT OUTER JOIN
            <include refid="aggregateStatsByEcho"/>
            ESA ON E.id = ESA.echoId
        WHERE
            R.id = #{retailerId}
        GROUP BY
            R.id, R.name
    </select>
    
    
    <select id="getEchoClicksByRetailerIdProductIdDate" resultMap="socialActivityTotalByDate">
        SELECT
            Date(EC.createdOn) as date,
            count(EC.id) as total
        FROM
            Echo E
            LEFT OUTER JOIN
            EchoClick EC on E.id = EC.echoId
        WHERE
            E.retailerId= #{retailerId}
            AND
            E.productId = #{productId}
        GROUP BY
            Date(EC.createdOn)
    </select>
    
    <select id="getEchoClicksByRetailerIdCustomerIdDate" resultMap="socialActivityTotalByDate">
        SELECT
            Date(EC.createdOn) as date,
            count(EC.id) as total
        FROM
            Echo E
            LEFT OUTER JOIN
            EchoClick EC on E.id = EC.echoId
        WHERE
            E.retailerId= #{retailerId}
            AND
            E.echoedUserId = #{echoedUserId}
        GROUP BY
            Date(EC.createdOn)
    </select>

    <select id="getEchoClicksByRetailerIdDate" resultMap="socialActivityTotalByDate">
        SELECT
            Date(EC.createdOn) as date,
            count(EC.id) as total
        FROM
            Retailer R
            LEFT OUTER JOIN
            Echo E ON R.id = E.retailerId
            LEFT OUTER JOIN
            EchoClick EC on E.id = EC.echoId
        WHERE
            R.id= #{retailerId}
        GROUP BY
            Date(EC.createdOn)
    </select>

    <select id="getFacebookCommentsByRetailerIdCustomerIdDate" resultMap="socialActivityTotalByDate">
        SELECT
            Date(FBC.createdOn) as date,
            count(FBC.id) as total
        FROM
            Echo E
            INNER JOIN
            FacebookPost FBP ON FBP.echoId = E.id
            INNER JOIN
            FacebookComment FBC ON FBC.facebookPostID = FBP.id
        WHERE
            E.retailerId= #{retailerId}
            AND
            E.echoedUserId = #{echoedUserId}
        GROUP BY
            Date(FBC.createdOn)
    </select>

    <select id="getFacebookCommentsByRetailerIdProductIdDate" resultMap="socialActivityTotalByDate">
        SELECT
            Date(FBC.createdOn) as date,
            count(FBC.id) as total
        FROM
            Echo E
            INNER JOIN
            FacebookPost FBP ON FBP.echoId = E.id
            INNER JOIN
            FacebookComment FBC ON FBC.facebookPostID = FBP.id
        WHERE
            E.retailerId= #{retailerId}
            AND
            E.productId = #{productId}
        GROUP BY
            Date(FBC.createdOn)
    </select>

    <select id="getFacebookCommentsByRetailerIdDate" resultMap="socialActivityTotalByDate">
        SELECT
            Date(FBC.createdOn) as date,
            count(FBC.id) as total
        FROM
            Echo E
            INNER JOIN
            FacebookPost FBP ON FBP.echoId = E.id
            INNER JOIN
            FacebookComment FBC ON FBC.facebookPostID = FBC.id
        WHERE
            E.retailerId= #{retailerId}
        GROUP BY
            Date(FBC.createdOn)
    </select>
    
    <select id="getFacebookLikesByRetailerIdCustomerIdDate" resultMap="socialActivityTotalByDate">
        SELECT
            Date(FBL.createdOn) as date,
            count(FBL.id) as total
        FROM
            Echo E
            INNER JOIN
            FacebookPost FBP ON FBP.echoId = E.id
            INNER JOIN
            FacebookLike FBL ON FBL.facebookPostId= FBP.id
        WHERE
            E.retailerId = #{retailerId}
            AND
            E.echoedUserId = #{echoedUserId}
    </select>

    <select id="getFacebookLikesByRetailerIdProductIdDate" resultMap="socialActivityTotalByDate">
        SELECT
            Date(FBL.createdOn) as date,
            count(FBL.id) as total
        FROM
            Echo E
            INNER JOIN
            FacebookPost FBP ON FBP.echoId = E.id
            INNER JOIN
            FacebookLike FBL ON FBL.facebookPostId = FBP.id
        WHERE
            E.retailerId= #{retailerId}
            AND
            E.productId = #{productId}
        GROUP BY
            Date(FBL.createdOn)
    </select>

    <select id="getFacebookLikesByRetailerIdDate" resultMap="socialActivityTotalByDate">
        SELECT
            Date(FBL.createdOn) as date,
            count(FBL.id) as total
        FROM
            Retailer R
            LEFT OUTER JOIN
            Echo E ON R.id = E.retailerId
            LEFT OUTER JOIN
            FacebookPost FBP ON FBP.echoId = E.id
            LEFT OUTER JOIN
            FacebookLike FBL ON FBL.facebookPostId = FBP.id
        WHERE
            R.id= #{retailerId}
        GROUP BY
            Date(FBL.createdOn)
    </select>
    

    <select id="getEchoedUserByRetailerUser" resultMap="echoedUser">
        SELECT
            EU.id as id,
            EU.updatedOn as updatedOn,
            EU.createdOn as createdOn,
            EU.name as name,
            EU.email as email,
            EU.screenName as screenName,
            EU.facebookUserId as facebookUserId,
            EU.facebookId as facebookId,
            EU.twitterUserId as twitterUserId,
            EU.twitterId as twitterId
        FROM
            EchoedUser EU
            INNER JOIN
            Echo E ON EU.id = E.echoedUserId
            INNER JOIN
            Retailer R ON R.id = E.retailerId
        WHERE
            EU.id = #{echoedUserId}
            AND
            R.id = #{retailerId}
        GROUP BY
            EU.id, EU.name
    </select>


    <select id="getTotalLikesByEchoedUserRetailerId" resultType="_int" useCache="false" >
        SELECT
            coalesce(count(FBL.id),0)
        FROM
            Echo E
            INNER JOIN
            FacebookPost FBP ON FBP.echoId = E.id
            INNER JOIN
            FacebookLike FBL ON FBL.facebookPostId = FBP.id
        WHERE
            E.echoedUserId = #{echoedUserId}
            AND
            E.retailerId = #{retailerId}
    </select>

    <select id="getTotalCommentsByEchoedUserRetailerId" resultType="_int" useCache="false" >
        SELECT
            coalesce(count(FBC.id),0)
        FROM
            Echo E
            INNER JOIN
            FacebookPost FBP ON FBP.echoId = E.id
            INNER JOIN
            FacebookComment FBC ON FBC.facebookPostId = FBP.id
        WHERE
            E.echoedUserId = #{echoedUserId}
            AND
            E.retailerId = #{retailerId}
    </select>

    <select id="getTotalEchoesByEchoedUserRetailerId" resultType="_int" useCache="false" >
        SELECT
            coalesce(count(E.id),0)
        FROM
            Echo E
        WHERE
            E.echoedUserId = #{echoedUserId}
            AND
            E.retailerId = #{retailerId}
    </select>

    <select id="getTotalEchoClicksByEchoedUserRetailerId" resultType="_int" useCache="false" >
        SELECT
            coalesce(count(EC.id),0)
        FROM
            Echo E
            INNER JOIN
            EchoClick EC ON EC.echoId = E.id
        WHERE
            E.echoedUserId = #{echoedUserId}
            AND
            E.retailerId = #{retailerId}
    </select>
    
    <select id="getTotalFacebookFriendsByEchoedUser" resultType="_int" useCache="false">
        SELECT
            coalesce(count(FF.id),0)
        FROM
            EchoedUser EU
            INNER JOIN
            FacebookUser FU ON EU.id = FU.echoedUserId
            INNER JOIN
            FacebookFriend FF ON FU.id = FF.facebookUserId
        WHERE
            EU.id =  #{echoedUserId}
    </select>

    <select id="getCommentsByRetailerId" resultMap="comments">
        SELECT
            FBC.id,
            FBC.updatedOn,
            FBC.createdOn,
            FBC.facebookPostId,
            FBC.facebookUserId,
            FBC.echoedUserId,
            FBC.facebookId,
            FBC.byFacebookId,
            FBC.name,
            FBC.message,
            FBC.createdAt
        FROM
            Echo E
            INNER JOIN
            FacebookPost FP ON FP.echoId = E.id
            INNER JOIN
            FacebookComment FBC ON FBC.facebookPostId = FP.id
        WHERE
            E.retailerId = #{retailerId}
        ORDER BY
            FBC.createdOn DESC
    </select>

    
    <select id="getCommentsByRetailerIdProductId" resultMap="comments">
        SELECT
            FBC.id,
            FBC.updatedOn,
            FBC.createdOn,
            FBC.facebookPostId,
            FBC.facebookUserId,
            FBC.echoedUserId,
            FBC.facebookId,
            FBC.byFacebookId,
            FBC.name,
            FBC.message,
            FBC.createdAt
        FROM
            Echo E
            INNER JOIN
            FacebookPost FP ON FP.echoId = E.id
            INNER JOIN
            FacebookComment FBC ON FBC.facebookPostId = FP.id
        WHERE
            E.productId = #{productId}
            AND
            E.retailerId = #{retailerId}
        ORDER BY
            FBC.createdOn DESC
    </select>
</mapper>


