<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.echoed.chamber.dao.views.FeedDao">
    <resultMap id="feedResult" type="com.echoed.chamber.domain.views.Feed">
        <constructor>
            <idArg column="echoedUserId" javaType="String"/>
            <arg javaType="com.echoed.chamber.domain.EchoedUser" resultMap="echoedUserResult"/>
        </constructor>
        <collection property="echoes" ofType="com.echoed.chamber.domain.views.EchoViewDetail" javaType="ArrayList" resultMap="echoViewResult" />
    </resultMap>

    <resultMap id="echoedUserResult" type="com.echoed.chamber.domain.EchoedUser">
        <constructor>
            <idArg column="echoedUserId" javaType="String" />
            <arg column="echoedUserName" javaType="String" />
            <arg column="echoedUserEmail" javaType="String" />
            <arg column="echoedUserScreenName" javaType="String" />
            <arg column="echoedUserFacebookUserId" javaType="String" />
            <arg column="echoedUserFacebookId" javaType="String" />
            <arg column="echoedUserTwitterUserId" javaType="String" />
            <arg column="echoedUserTwitterId" javaType="String" />
        </constructor>
    </resultMap>
    
    <resultMap id="echoViewResult" type="com.echoed.chamber.domain.views.EchoViewDetail">
        <constructor>
            <idArg column="echoId" javaType="String" />
            <arg column="echoImageUrl" javaType="String" />
            <arg column="echoProductName" javaType="String"/>
            <arg column="echoCategory" javaType="String"/>
            <arg column="echoBrand" javaType="String"/>
            <arg column="echoLandingPageUrl" javaType="String" />
            <arg column="echoedFriendId" javaType="String"/>
            <arg column="echoedFriendName" javaType="String"/>
            <arg column="retailerId" javaType="String" />
            <arg column="retailerName" javaType="String" />
        </constructor>
    </resultMap>

    <resultMap id="echoViewPublicResult" type="com.echoed.chamber.domain.views.EchoViewPublic">
        <constructor>
            <idArg column="echoId" javaType="String"/>
            <arg column="echoBoughtOn" javaType="Date"/>
            <arg column="echoImageUrl" javaType="String"/>
            <arg column="echoProductName" javaType="String"/>
            <arg column="echoCategory" javaType="String"/>
            <arg column="echoBrand" javaType="String"/>
            <arg column="echoLandingPageUrl" javaType="String"/>
            <arg column="retailerName" javaType="String"/>
        </constructor>
    </resultMap>

    <select id="getPublicFeed" resultMap="echoViewPublicResult">
        select
            E.id as echoId,
            E.boughtOn as echoBoughtOn,
            E.imageUrl as echoImageUrl,
            E.productName as echoProductName,
            E.category as echoCategory,
            E.brand as echoBrand,
            E.landingPageUrl as echoLandingPageUrl,
            R.name as retailerName
        from
            Echo E
            left outer join Retailer R on E.retailerId = R.id
        order by
            E.boughtOn desc, E.id DESC
        Limit
            0,50
    </select>

    <select id="findByEchoedUserId" resultMap="feedResult">
        select
            EU.id as echoedUserId,
            EU.email as echoedUserEmail,
            EU.name as echoedUserName,
            EU.screenName as echoedUserScreenName,
            EU.facebookUserId as echoedUserFacebookUserId,
            EU.facebookId as echoedUserFacebookId,
            EU.twitterUserId as echoedUserTwitterUserId,
            EU.twitterId as echoedUserTwitterId,
            EU2.id as echoedFriendId,
            EU2.name as echoedFriendName,
            EU2.screenName as echoedFriendScreenName,
            E.id as echoId,
            E.boughtOn as echoBoughtOn,
            E.imageUrl as echoImageUrl,
            E.productName as echoProductName,
            E.category as echoCategory,
            E.brand as echoBrand,
            coalesce(E.price, 0)  as echoPrice,
            E.landingPageUrl as echoLandingPageUrl,
            coalesce(E.totalClicks, 0) as echoTotalClicks,
            ROUND(coalesce(E.credit, 0),2) as echoCredit,
            R.id as retailerId,
            R.name as retailerName,
            RS.id as retailerSettingsId,
            coalesce(RS.minClicks, 0) as retailerSettingsMinClicks,
            coalesce(RS.minPercentage, 0) as retailerSettingsMinPercentage,
            coalesce(RS.maxPercentage, 0) as retailerSettingsMaxPercentage,
            FP.id as facebookPostId,
            FP.facebookId as facebookPostFacebookId,
            TS.id as twitterStatusId,
            TS.twitterId as twitterStatusTwitterId
        from
            EchoedUser EU
            left outer join EchoedFriend EF on EU.id = EF.fromEchoedUserId
            left outer join EchoedUser EU2 on EF.toEchoedUserId = EU2.id
            left outer join Echo E on EF.toEchoedUserId = E.echoedUserId
            left outer join Retailer R on E.retailerId = R.id
            left outer join RetailerSettings RS on E.retailerSettingsId = RS.id
            left outer join FacebookPost FP on E.facebookPostId = FP.id
            left outer join TwitterStatus TS on E.twitterStatusId = TS.id
        where
            EU.id = #{id}
        order by
            E.boughtOn desc, E.id DESC
        Limit
            0,50
    </select>
</mapper>
