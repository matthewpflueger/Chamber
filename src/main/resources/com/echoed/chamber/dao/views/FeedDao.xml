<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.echoed.chamber.dao.views.FeedDao">

    <cache-ref namespace="com.echoed.chamber.dao.cache.Flushing30" />

    <resultMap id="feedResult" type="com.echoed.chamber.domain.views.Feed">
        <constructor>
            <idArg column="echoedUserId" javaType="String"/>
            <arg javaType="com.echoed.chamber.domain.EchoedUser" resultMap="echoedUserResult"/>
        </constructor>
        <collection property="echoes" ofType="com.echoed.chamber.domain.views.EchoViewDetail" javaType="ArrayList" resultMap="echoViewResult" />
    </resultMap>

    <resultMap id="echoedUserResult" type="com.echoed.chamber.domain.EchoedUser">
        <constructor>
            <idArg column="echoedUserId" javaType="String" />
            <arg column="echoedUserName" javaType="String" />
            <arg column="echoedUserEmail" javaType="String" />
            <arg column="echoedUserScreenName" javaType="String" />
            <arg column="echoedUserFacebookUserId" javaType="String" />
            <arg column="echoedUserFacebookId" javaType="String" />
            <arg column="echoedUserTwitterUserId" javaType="String" />
            <arg column="echoedUserTwitterId" javaType="String" />
        </constructor>
    </resultMap>

    <resultMap id="echoViewResult" type="com.echoed.chamber.domain.views.EchoViewDetail">
        <constructor>
            <idArg column="echoId" javaType="String" />
            <arg column="echoProductName" javaType="String"/>
            <arg column="echoCategory" javaType="String"/>
            <arg column="echoBrand" javaType="String"/>
            <arg column="echoLandingPageUrl" javaType="String" />
            <arg column="echoedFriendId" javaType="String"/>
            <arg column="echoedFriendName" javaType="String"/>
            <arg column="partnerId" javaType="String" />
            <arg column="partnerName" javaType="String" />
            <arg resultMap="com.echoed.chamber.dao.ImageDao.imageResult" javaType="com.echoed.chamber.domain.Image" />
        </constructor>
    </resultMap>

    <resultMap id="echoViewPublicResult" type="com.echoed.chamber.domain.views.EchoViewPublic">
        <constructor>
            <idArg column="echoId" javaType="String"/>
            <arg column="echoBoughtOn" javaType="Date"/>
            <arg column="echoProductName" javaType="String"/>
            <arg column="echoCategory" javaType="String"/>
            <arg column="echoBrand" javaType="String"/>
            <arg column="echoLandingPageUrl" javaType="String"/>
            <arg column="partnerName" javaType="String"/>
            <arg column="partnerId" javaType="String" />
            <arg column="partnerHandle" javaType="String"/>
            <arg resultMap="com.echoed.chamber.dao.ImageDao.imageResult" javaType="com.echoed.chamber.domain.Image" />
        </constructor>
    </resultMap>
    <select id="getPublicFeed" resultMap="echoViewPublicResult">
        select
            coalesce(E.id) as echoId,
            max(E.createdOn) as echoBoughtOn,
            E.productName as echoProductName,
            coalesce(P.category, "Other") as echoCategory,
            E.brand as echoBrand,
            E.landingPageUrl as echoLandingPageUrl,
            P.name as partnerName,
            P.handle as partnerHandle,
            P.id as partnerId,
            I.id as imageId,
            I.updatedOn as imageUpdatedOn,
            I.createdOn as imageCreatedOn,
            I.url as imageUrl,
            I.originalUrl as imageOriginalUrl,
            I.originalWidth as imageOriginalWidth,
            I.originalHeight as imageOriginalHeight,
            I.sizedUrl as imageSizedUrl,
            I.sizedWidth as imageSizedWidth,
            I.sizedHeight as imageSizedHeight,
            I.thumbnailUrl as imageThumbnailUrl,
            I.thumbnailWidth as imageThumbnailWidth,
            I.thumbnailHeight as imageThumbnailHeight,
            I.processedOn as imageProcessedOn,
            I.processedStatus as imageProcessedStatus,
            I.retries as imageRetries
        from
            Echo E
            join Image I on E.imageId = I.id
            join Partner P on E.partnerId = P.id
            join EchoMetrics EM on EM.echoId = E.id
            join PartnerSettings PS on PS.id=EM.partnerSettingsId
        where
            I.sizedWidth > 0
            and
            PS.activeOn &lt;= Now()
        group by
            echoProductName,
            echoBrand,
            echoLandingPageUrl,
            partnerName,
            imageId,
            imageOriginalUrl,
            imageSizedUrl,
            imageSizedWidth,
            imageThumbnailUrl,
            imageThumbnailWidth,
            imageThumbnailHeight,
            imageProcessedOn,
            imageProcessedStatus,
            imageRetries
        order by
            echoBoughtOn desc
        limit
            #{start}, #{limit}
    </select>


    <select id="getCategoryFeed"  resultMap="echoViewPublicResult">
        select
        E.id as echoId,
        E.createdOn as echoBoughtOn,
        E.productName as echoProductName,
        coalesce(P.category,"Other") as echoCategory,
        E.brand as echoBrand,
        E.landingPageUrl as echoLandingPageUrl,
        P.name as partnerName,
        P.id as partnerId,
        P.handle as partnerHandle,
        <include refid="com.echoed.chamber.dao.ImageDao.imageColumns" />
        from
        Echo E
        join Image I on E.imageId = I.id
        join Partner P on E.partnerId = P.id
        where
        P.category = #{categoryId}
        order by
        E.createdOn desc, E.id DESC
        Limit
        #{start}, #{limit}
    </select>


    <select id="getPartnerFeed"  resultMap="echoViewPublicResult">
        select
            E.id as echoId,
            E.createdOn as echoBoughtOn,
            E.productName as echoProductName,
            coalesce(P.category,"Other") as echoCategory,
            E.brand as echoBrand,
            E.landingPageUrl as echoLandingPageUrl,
            P.name as partnerName,
            P.id as partnerId,
            P.handle as partnerHandle,
            <include refid="com.echoed.chamber.dao.ImageDao.imageColumns" />
        from
            Echo E
            join Image I on E.imageId = I.id
            join Partner P on E.partnerId = P.id
        where
            P.handle = #{partnerId}
            or
            P.id = #{partnerId}
        order by
            E.createdOn desc, E.id DESC
        Limit
            #{start}, #{limit}
    </select>

    <select id="findByEchoedUserId" resultMap="feedResult">
        select
            EU.id as echoedUserId,
            EU.email as echoedUserEmail,
            EU.name as echoedUserName,
            EU.screenName as echoedUserScreenName,
            EU.facebookUserId as echoedUserFacebookUserId,
            EU.facebookId as echoedUserFacebookId,
            EU.twitterUserId as echoedUserTwitterUserId,
            EU.twitterId as echoedUserTwitterId,
            EU2.id as echoedFriendId,
            EU2.name as echoedFriendName,
            EU2.screenName as echoedFriendScreenName,
            E.id as echoId,
            E.boughtOn as echoBoughtOn,
            E.productName as echoProductName,
            P.category as echoCategory,
            E.brand as echoBrand,
            coalesce(E.price, 0)  as echoPrice,
            E.landingPageUrl as echoLandingPageUrl,
            coalesce(EM.totalClicks, 0) as echoTotalClicks,
            ROUND(coalesce(EM.credit, 0),2) as echoCredit,
            P.id as partnerId,
            P.name as partnerName,
            PS.id as partnerSettingsId,
            coalesce(PS.minClicks, 0) as partnerSettingsMinClicks,
            coalesce(PS.minPercentage, 0) as partnerSettingsMinPercentage,
            coalesce(PS.maxPercentage, 0) as partnerSettingsMaxPercentage,
            FP.id as facebookPostId,
            FP.facebookId as facebookPostFacebookId,
            TS.id as twitterStatusId,
            TS.twitterId as twitterStatusTwitterId,
            <include refid="com.echoed.chamber.dao.ImageDao.imageColumns" />
        from
            EchoedUser EU
            left outer join EchoedFriend EF on EU.id = EF.fromEchoedUserId
            left outer join EchoedUser EU2 on EF.toEchoedUserId = EU2.id
            left outer join Echo E on EF.toEchoedUserId = E.echoedUserId
            left outer join Image I on E.imageId = I.id
            left outer join EchoMetrics EM on E.id = EM.echoId
            left outer join Partner P on E.partnerId = P.id
            left outer join PartnerSettings PS on E.partnerSettingsId = PS.id
            left outer join FacebookPost FP on E.facebookPostId = FP.id
            left outer join TwitterStatus TS on E.twitterStatusId = TS.id
        where
            EU.id = #{id} and I.sizedWidth > 0
        order by
            E.createdOn desc, E.id DESC
        Limit
            #{start},#{limit}
    </select>
</mapper>
