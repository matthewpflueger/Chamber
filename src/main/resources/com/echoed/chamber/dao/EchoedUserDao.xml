<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.echoed.chamber.dao.EchoedUserDao">

    <cache-ref namespace="com.echoed.chamber.dao.cache.Default" />

    <resultMap id="echoedUserResult" type="com.echoed.chamber.domain.EchoedUser">
        <constructor>
            <idArg column="echoedUserId" javaType="String" />
            <arg column="echoedUserUpdatedOn" javaType="_long" />
            <arg column="echoedUserCreatedOn" javaType="_long" />
            <arg column="echoedUserName" javaType="String" />
            <arg column="echoedUserEmail" javaType="String" />
            <arg column="echoedUserScreenName" javaType="String" />
            <arg column="echoedUserFacebookUserId" javaType="String" />
            <arg column="echoedUserFacebookId" javaType="String" />
            <arg column="echoedUserTwitterUserId" javaType="String" />
            <arg column="echoedUserTwitterId" javaType="String" />
            <arg column="echoedUserPassword" javaType="String" />
            <arg column="echoedUserSalt" javaType="String" />
        </constructor>
    </resultMap>

    <sql id="echoedUserColumns">
        EU.id as echoedUserId,
        EU.updatedOn as echoedUserUpdatedOn,
        EU.createdOn as echoedUserCreatedOn,
        EU.email as echoedUserEmail,
        EU.name as echoedUserName,
        EU.screenName as echoedUserScreenName,
        EU.facebookUserId as echoedUserFacebookUserId,
        EU.facebookId as echoedUserFacebookId,
        EU.twitterUserId as echoedUserTwitterUserId,
        EU.twitterId as echoedUserTwitterId,
        EU.password as echoedUserPassword,
        EU.salt as echoedUserSalt
    </sql>


    <select id="findById" resultMap="echoedUserResult">
    	select <include refid="echoedUserColumns" />
    	from EchoedUser EU
    	where EU.id = #{id}
    </select>

    <select id="findByFacebookUserId" resultMap="echoedUserResult">
    	select <include refid="echoedUserColumns" />
    	from EchoedUser EU
    	where EU.facebookUserId = #{facebookUserId}
    </select>

    <select id="findByTwitterUserId" resultMap="echoedUserResult">
    	select <include refid="echoedUserColumns" />
    	from EchoedUser EU
        where EU.twitterUserId = #{twitterUserId}
    </select>

    <select id="findByFacebookId" resultMap="echoedUserResult">
    	select <include refid="echoedUserColumns" />
    	from EchoedUser EU
        where EU.facebookId = #{facebookId}
    </select>

    <select id="findByTwitterId" resultMap="echoedUserResult">
    	select <include refid="echoedUserColumns" />
    	from EchoedUser EU
        where EU.twitterId = #{twitterId}
    </select>

    <select id="findByEmail" resultMap="echoedUserResult">
    	select <include refid="echoedUserColumns" />
    	from EchoedUser EU
        where EU.email = #{email}
    </select>

    <insert id="insert" parameterType="com.echoed.chamber.domain.EchoedUser">
    	insert into EchoedUser(
    	        id,
                createdOn,
    			name,
                email,
                screenName,
                facebookUserId,
                facebookId,
                twitterUserId,
                twitterId,
                password,
                salt)
    		values (
                #{id},
                #{createdOn},
    			#{name},
    			#{email},
    			#{screenName},
                #{facebookUserId},
                #{facebookId},
    			#{twitterUserId},
    			#{twitterId},
    			#{password},
    			#{salt})
    </insert>

    <delete id="deleteByEmail">
        delete from EchoedUser where email = #{email}
    </delete>

    <delete id="deleteByScreenName">
        delete from EchoedUser where screenName = #{screenName}
    </delete>

    <update id="unlinkTwitter" parameterType="com.echoed.chamber.domain.EchoedUser">
        update EchoedUser set
            twitterUserId = null,
            twitterId = null,
            screenName = null
        where
            id = #{id}
    </update>

    <update id="update" parameterType="com.echoed.chamber.domain.EchoedUser">
        update EchoedUser set
            name=#{name},
            email=#{email},
            screenName=#{screenName},
            facebookUserId=#{facebookUserId},
            facebookId=#{facebookId},
            twitterUserId=#{twitterUserId},
            twitterId=#{twitterId},
            password=#{password},
            salt=#{salt}
        where
            id=#{id}
    </update>

</mapper>
