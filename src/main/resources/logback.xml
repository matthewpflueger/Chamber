<configuration scan="true" scanPeriod="30 seconds" debug="true">

    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %-15.15t %-35.-35replace(%logger{0}){'\$.*$',''} %msg    %X{akkaSource}%n</pattern>
        </encoder>
    </appender>

    <appender name="errors" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>errors.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>

        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>errors.%i.log.gz</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>3</maxIndex>
        </rollingPolicy>

        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>50MB</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %-15.15t %-35.-35replace(%logger{0}){'\$.*$',''} %msg    %X{akkaSource}%n</pattern>
        </encoder>
    </appender>

    <appender name="all" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>all.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>all.%i.log.gz</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>10</maxIndex>
        </rollingPolicy>

        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>100MB</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %-15.15t %-35.-35replace(%logger{0}){'\$.*$',''} %msg    %X{akkaSource}%n</pattern>
        </encoder>
    </appender>

    <appender name="js" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>js.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>js.%i.log.gz</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>3</maxIndex>
        </rollingPolicy>

        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>50MB</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %-15.15t %-35.-35replace(%logger{0}){'\$.*$',''} %msg    %X{akkaSource}%n</pattern>
        </encoder>
    </appender>

    <appender name="async" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="all" />
        <!-- See http://logback.qos.ch/manual/appenders.html#AsyncAppender -->
        <discardingThreshold>20</discardingThreshold>
    </appender>

    <!-- Our javascript errors get posted to their own file due to the volume -->
    <logger name="com.echoed.chamber.controllers.PostErrorController" level="debug" additivity="false">
        <appender-ref ref="js" />
    </logger>

    <!-- put the following at debug to see SQL statements -->
    <logger name="com.echoed.chamber.services.state.QueryService" level="info" />
    <logger name="com.echoed.chamber.services.state.StateService" level="info" />

    <!-- below just clutter the logs -->
    <logger name="com.echoed.chamber.services.feed.FeedService" level="info" />
    <logger name="com.echoed.chamber.services.facebook.FacebookPostCrawler" level="info" />
    <logger name="com.echoed.chamber.services.geolocation" level="info" />
    <logger name="com.echoed.chamber.dao" level="info" />
    <logger name="org.springframework.web.servlet.PageNotFound" level="error" />
    <logger name="com.gargoylesoftware.htmlunit" level="error" />
    <logger name="org.apache.ibatis.cache.decorators.LoggingCache" level="info" />

    <!-- make sure we see our debug statements -->
    <logger name="com.echoed" level="debug" />
    <logger name="org.jclouds" level="debug" />
    <logger name="com.ning" level="debug" />

    <root level="warn">
        <appender-ref ref="async" />
        <appender-ref ref="errors" />
    </root>
</configuration>
