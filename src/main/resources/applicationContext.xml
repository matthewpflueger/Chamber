<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
	        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context
	        http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util-3.0.xsd"
       default-init-method="init"
       default-destroy-method="destroy">


    <context:annotation-config/>

    <import resource="classpath:chamber-properties.xml" />

    <import resource="classpath:database.xml" />

    <bean id="applicationContextRef" class="com.echoed.util.ApplicationContextRef" />

    <bean class="com.echoed.chamber.services.ServiceConfig" />


    <bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="allowCoreThreadTimeOut" value="true" />
        <property name="maxPoolSize" value="50" />
        <property name="threadNamePrefix" value="Chamber-executor" />
    </bean>

    <bean class="com.echoed.util.XTrustProvider" init-method="install" />

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="cacheSeconds" value="-1" /> <!-- cache forever -->
        <property name="basenames">
            <list>
                <value>classpath:messages/messages</value>
                <value>classpath:messages/errors</value>
            </list>
        </property>
    </bean>

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" >
        <property name="validationMessageSource" ref="messageSource" />
    </bean>

    <bean id="globalsManager" class="com.echoed.chamber.services.GlobalsManager" >
        <property name="urlsProperties" ref="urlsProperties" />
        <property name="gitProperties" ref="gitProperties" />
        <property name="facebookClientId" value="${facebook.clientId}" />
        <property name="version" value="${version}" />
        <property name="messageSource" ref="messageSource" />
        <property name="envType" value="${envType}" />
        <property name="scriptTagTemplate" value="${scriptTagTemplate}" />
    </bean>

    <bean id="encrypter" class="com.echoed.util.Encrypter" >
        <property name="secret" value="${echoed.secret}" />
    </bean>


    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="defaultEncoding" value="UTF-8" />
        <property name="username" value="${mail.smtp.user}" />
        <property name="password" value="${mail.smtp.password}" />
        <property name="javaMailProperties" ref="mailProperties" />
    </bean>


    <!-- This is here because the mail service needs to resolve mustache templates -->
    <bean id="mustacheEngine" class="com.echoed.util.mustache.MustacheEngine">
        <property name="prefix" value="${mustache.prefix}" />
        <property name="suffix" value="${mustache.suffix}" />
        <property name="cache" value="${mustache.cache}" />
        <property name="executorService" value="#{ executor.threadPoolExecutor }" />
    </bean>


    <bean id="cacheManager" class="com.echoed.cache.LocalCacheManager">
        <property name="expireInMinutes" value="${cache.expireInMinutes}" />
        <property name="expirationConfig" ref="cacheProperties" />
    </bean>


    <bean id="blobStore" class="com.echoed.util.BlobStore">
        <property name="provider" value="${blobstore.provider}" />
        <property name="username" value="${blobstore.identity}" />
        <property name="credential" value="${blobstore.credential}" />
        <property name="container" value="${blobstore.container}" />
        <property name="containerUrl" value="${blobstore.containerUrl}" />
        <property name="actorSystem" ref="actorSystem" />
    </bean>


    <util:list id="filteredUserAgents">
        <value>AppEngine-Google</value>
        <value>bitlybot</value>
        <value>brainbot</value>
        <value>Butterfly</value>
        <value>Crowsnest</value>
        <value>Embedly</value>
        <value>facebookexternalhit</value>
        <value>Feedfetcher</value>
        <value>Googlebot</value>
        <value>InAGist</value>
        <value>Jakarta</value>
        <value>Java</value>
        <value>JS-Kit</value>
        <value>LinkedInBot</value>
        <value>news.me</value>
        <value>newsme</value>
        <value>NING</value>
        <value>RockMeltEmbedService</value>
        <value>ShowyouBot</value>
        <value>TweetmemeBot</value>
        <value>TweetedTimes</value>
        <value>Twitterbot</value>
        <value>Voyager</value>
        <value>YandexBot</value>
        <value>Yepi</value>
        <value>Yeti</value>
        <value>FlipboardProxy</value>
    </util:list>

</beans>
