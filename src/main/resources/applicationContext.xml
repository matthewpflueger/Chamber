<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
	        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util-3.0.xsd"
       default-init-method="init"
       default-destroy-method="destroy">


    <import resource="classpath:chamber-properties.xml" />

    <import resource="classpath:database.xml" />

    <bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="allowCoreThreadTimeOut" value="true" />
        <property name="maxPoolSize" value="50" />
        <property name="threadNamePrefix" value="Chamber-executor" />
    </bean>

    <bean class="com.echoed.util.XTrustProvider" init-method="install" />
    <bean id="httpClient" class="dispatch.nio.Http" destroy-method="shutdown" />

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="cacheSeconds" value="-1" /> <!-- cache forever -->
        <property name="basenames">
            <list>
                <value>${http.urls.messages}/messages</value>
                <value>${http.urls.messages}/errors</value>
            </list>
        </property>
    </bean>

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" >
        <property name="validationMessageSource" ref="messageSource" />
    </bean>

    <bean id="globalsManager" class="com.echoed.chamber.services.GlobalsManager" >
        <property name="urlsProperties" ref="urlsProperties" />
        <property name="gitProperties" ref="gitProperties" />
        <property name="facebookClientId" value="${facebook.clientId}" />
        <property name="version" value="${version}" />
    </bean>

    <bean id="encrypter" class="com.echoed.util.Encrypter" >
        <property name="secret" value="${echoed.secret}" />
    </bean>


    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="defaultEncoding" value="UTF-8" />
        <property name="username" value="${mail.smtp.user}" />
        <property name="password" value="${mail.smtp.password}" />
        <property name="javaMailProperties" ref="mailProperties" />
    </bean>


    <!-- This is here because the mail service needs to resolve mustache templates -->
    <bean id="mustacheEngine" class="com.echoed.util.mustache.MustacheEngine">
        <property name="prefix" value="${mustache.prefix}" />
        <property name="suffix" value="${mustache.suffix}" />
        <property name="defaultValue" value="${mustache.defaultValue}" />
    </bean>


    <bean id="cacheManager" class="com.echoed.cache.LocalCacheManager">
        <property name="expireInMinutes" value="${cache.expireInMinutes}" />
        <property name="expirationConfig" ref="cacheProperties" />
    </bean>


    <bean id="blobStore" class="com.echoed.util.BlobStore">
        <property name="provider" value="${blobstore.provider}" />
        <property name="username" value="${blobstore.identity}" />
        <property name="credential" value="${blobstore.credential}" />
        <property name="container" value="${blobstore.container}" />
        <property name="containerUrl" value="${blobstore.containerUrl}" />
        <property name="actorSystem" ref="actorSystem" />
    </bean>


    <bean id="imageService" class="com.echoed.chamber.services.image.ImageServiceActorClient">
        <property name="actorRef" ref="imageServiceActor" />
    </bean>

    <bean id="emailService" class="com.echoed.chamber.services.email.EmailServiceActorClient">
        <property name="actorRef" ref="emailServiceActor" />
    </bean>

    <bean id="eventService" class="com.echoed.chamber.services.event.EventServiceActorClient">
        <property name="actorRef" ref="eventServiceActor" />
    </bean>

    <bean id="feedService" class="com.echoed.chamber.services.feed.FeedServiceActorClient">
        <property name="feedServiceActor" ref="feedServiceActor" />
    </bean>

    <bean id="facebookAccess" class="com.echoed.chamber.services.facebook.FacebookAccessActorClient">
        <property name="actorRef" ref="facebookAccessActor" />
    </bean>

    <bean id="facebookServiceLocator" class="com.echoed.chamber.services.facebook.FacebookServiceLocatorActorClient">
        <property name="facebookServiceLocatorActor" ref="facebookServiceLocatorActor" />
    </bean>

    <bean id="echoService" class="com.echoed.chamber.services.echo.EchoServiceActorClient">
        <property name="echoServiceActor" ref="echoServiceActor" />
    </bean>

    <bean id="twitterAccess" class="com.echoed.chamber.services.twitter.TwitterAccessActorClient">
        <property name="twitterAccessActor" ref="twitterAccessActor" />
    </bean>

    <bean id="twitterServiceLocator" class="com.echoed.chamber.services.twitter.TwitterServiceLocatorActorClient">
        <property name="twitterServiceLocatorActor" ref="twitterServiceLocatorActor" />
    </bean>

    <bean id="echoedUserServiceLocator" class="com.echoed.chamber.services.echoeduser.EchoedUserServiceLocatorActorClient">
        <property name="echoedUserServiceLocatorActor" ref="echoedUserServiceLocatorActor" />
    </bean>

    <bean id="partnerServiceManager" class="com.echoed.chamber.services.partner.PartnerServiceManagerActorClient">
        <property name="actorRef" ref="partnerServiceManagerActor" />
    </bean>

    <bean id="partnerUserServiceLocator" class="com.echoed.chamber.services.partneruser.PartnerUserServiceLocatorActorClient">
        <property name="partnerUserServiceLocatorActor" ref="partnerUserServiceLocatorActor" />
    </bean>

    <bean id="adminUserServiceLocator" class="com.echoed.chamber.services.adminuser.AdminUserServiceLocatorActorClient">
        <property name="adminUserServiceLocatorActor"  ref="adminUserServiceLocatorActor" />
    </bean>

    <bean id="shopifyPartnerServiceManager" class="com.echoed.chamber.services.partner.shopify.ShopifyPartnerServiceManagerActorClient">
        <property name="actorRef" ref="shopifyPartnerServiceManagerActor" />
    </bean>

    <bean id="shopifyAccess" class="com.echoed.chamber.services.partner.shopify.ShopifyAccessActorClient">
        <property name="shopifyAccessActor" ref="shopifyAccessActor"/>
    </bean>

    <bean id="networkSolutionsPartnerServiceManager" class="com.echoed.chamber.services.partner.networksolutions.NetworkSolutionsPartnerServiceManagerActorClient">
        <property name="actorRef" ref="networkSolutionsPartnerServiceManagerActor" />
    </bean>

    <bean id="networkSolutionsAccess" class="com.echoed.chamber.services.partner.networksolutions.NetworkSolutionsAccessActorClient">
        <property name="networkSolutionsAccessActor" ref="networkSolutionsDispatchAccessActor"/>
    </bean>

    <bean id="bigCommercePartnerServiceManager" class="com.echoed.chamber.services.partner.bigcommerce.BigCommercePartnerServiceManagerActorClient">
        <property name="actorRef" ref="bigCommercePartnerServiceManagerActor" />
    </bean>

    <bean id="bigCommerceAccess" class="com.echoed.chamber.services.partner.bigcommerce.BigCommerceAccessActorClient">
        <property name="bigCommerceAccessActor" ref="bigCommerceAccessActor"/>
    </bean>

    <bean id="magentoGoPartnerServiceManager" class="com.echoed.chamber.services.partner.magentogo.MagentoGoPartnerServiceManagerActorClient">
        <property name="actorRef" ref="magentoGoPartnerServiceManagerActor" />
    </bean>

    <bean id="magentoGoAccess" class="com.echoed.chamber.services.partner.magentogo.MagentoGoAccessActorClient">
        <property name="magentoGoAccessActor" ref="magentoGoAccessActor"/>
    </bean>


    <util:map id="cloudPartners">
        <entry key="Shopify" value-ref="shopifyPartnerServiceManager" />
        <entry key="Network Solutions" value-ref="networkSolutionsPartnerServiceManager" />
        <entry key="BigCommerce" value-ref="bigCommercePartnerServiceManager" />
        <entry key="MagentoGo" value-ref="magentoGoPartnerServiceManager" />
    </util:map>


    <bean id="actorSystem" class="com.echoed.chamber.services.ChamberActorSystem" />


    <bean id="actorBean" abstract="true">
        <property name="timeoutInSeconds" value="20" />
        <property name="actorSystem" ref="actorSystem" />
    </bean>


    <bean
            id="imageServiceActor"
            class="com.echoed.chamber.services.image.ImageServiceActor"
            parent="actorBean">
        <property name="imageDao" ref="imageDao" />
        <property name="blobStore" ref="blobStore" />
    </bean>


    <bean
            id="eventServiceActor"
            class="com.echoed.chamber.services.event.EventServiceActor"
            parent="actorBean">
        <property name="eventLogDao" ref="eventLogDao" />
    </bean>


    <bean
            id="emailServiceActor"
            class="com.echoed.chamber.services.email.EmailServiceActor"
            parent="actorBean">
        <property name="javaMailSender" ref="javaMailSender" />
        <property name="mustacheEngine" ref="mustacheEngine" />
        <property name="mailProperties" ref="mailProperties" />
        <property name="globalsManager" ref="globalsManager" />
    </bean>


    <bean
            id="facebookAccessActor"
            class="com.echoed.chamber.services.facebook.FacebookAccessActor"
            parent="actorBean">
        <property name="properties" ref="facebookAccessProperties" />
    </bean>


    <bean
            id="facebookServiceLocatorActor"
            class="com.echoed.chamber.services.facebook.FacebookServiceLocatorActor"
            parent="actorBean">
        <property name="cacheManager" ref="cacheManager" />
        <property name="facebookAccess" ref="facebookAccess" />
        <property name="facebookUserDao" ref="facebookUserDao" />
        <property name="facebookPostDao" ref="facebookPostDao" />
        <property name="facebookFriendDao" ref="facebookFriendDao" />
        <property name="partnerDao" ref="partnerDao" />
        <property name="partnerSettingsDao" ref="partnerSettingsDao"/>
        <property name="urlsProperties" ref="urlsProperties" />
    </bean>


    <util:list id="filteredUserAgents">
        <value>AppEngine-Google</value>
        <value>bitlybot</value>
        <value>brainbot</value>
        <value>Butterfly</value>
        <value>Crowsnest</value>
        <value>Embedly</value>
        <value>facebookexternalhit</value>
        <value>Feedfetcher</value>
        <value>Googlebot</value>
        <value>InAGist</value>
        <value>Jakarta</value>
        <value>Java</value>
        <value>JS-Kit</value>
        <value>LinkedInBot</value>
        <value>news.me</value>
        <value>newsme</value>
        <value>NING</value>
        <value>RockMeltEmbedService</value>
        <value>ShowyouBot</value>
        <value>TweetmemeBot</value>
        <value>TweetedTimes</value>
        <value>Twitterbot</value>
        <value>Voyager</value>
        <value>YandexBot</value>
        <value>Yepi</value>
        <value>Yeti</value>
        <value>FlipboardProxy</value>
    </util:list>

    <bean
            id="echoServiceActor"
            class="com.echoed.chamber.services.echo.EchoServiceActor"
            parent="actorBean">
        <property name="echoDao" ref="echoDao" />
        <property name="echoMetricsDao" ref="echoMetricsDao" />
        <property name="partnerDao" ref="partnerDao" />
        <property name="partnerSettingsDao" ref="partnerSettingsDao" />
        <property name="echoClickDao" ref="echoClickDao" />
        <property name="imageDao" ref="imageDao" />
        <property name="imageService" ref="imageService" />
        <property name="transactionTemplate" ref="transactionTemplate" />
        <property name="filteredUserAgents" ref="filteredUserAgents" />
    </bean>


    <bean
           id="twitterAccessActor"
           class="com.echoed.chamber.services.twitter.TwitterAccessActor"
           parent="actorBean">
        <property name="properties" ref="twitterAccessProperties"/>
        <property name="cacheManager" ref="cacheManager" />
    </bean>


    <bean
           id="twitterServiceLocatorActor"
           class="com.echoed.chamber.services.twitter.TwitterServiceLocatorActor"
           parent="actorBean">
        <property name="twitterAccess" ref="twitterAccess" />
        <property name="twitterUserDao" ref="twitterUserDao" />
        <property name="twitterStatusDao" ref="twitterStatusDao" />
        <property name="urlsProperties" ref="urlsProperties" />
        <property name="cacheManager" ref="cacheManager" />
    </bean>



    <bean
            id="echoedUserServiceLocatorActor"
            class="com.echoed.chamber.services.echoeduser.EchoedUserServiceLocatorActor"
            parent="actorBean">
        <property name="twitterServiceLocator" ref="twitterServiceLocator"/>
        <property name="facebookServiceLocator" ref="facebookServiceLocator"/>
        <property name="echoedUserDao" ref="echoedUserDao" />
        <property name="closetDao" ref="closetDao" />
        <property name="echoedFriendDao" ref="echoedFriendDao" />
        <property name="feedDao" ref="feedDao"/>
        <property name="echoDao" ref="echoDao" />
        <property name="echoMetricsDao" ref="echoMetricsDao" />
        <property name="partnerSettingsDao" ref="partnerSettingsDao" />
        <property name="cacheManager" ref="cacheManager" />
    </bean>


    <bean
            id="partnerUserServiceLocatorActor"
            class="com.echoed.chamber.services.partneruser.PartnerUserServiceLocatorActor"
            parent="actorBean">
        <property name="partnerUserDao" ref="partnerUserDao" />
        <property name="partnerViewDao" ref="partnerViewDao"/>
        <property name="cacheManager" ref="cacheManager" />
    </bean>


    <bean
            id="adminUserServiceLocatorActor"
            class="com.echoed.chamber.services.adminuser.AdminUserServiceLocatorActor"
            parent="actorBean">
        <property name="adminUserDao" ref="adminUserDao" />
        <property name="adminViewDao" ref="adminViewDao" />
        <property name="partnerSettingsDao" ref="partnerSettingsDao" />
        <property name="cacheManager" ref="cacheManager" />
    </bean>
    

    <bean
            id="partnerServiceBean"
            abstract="true"
            parent="actorBean">
        <property name="partnerDao" ref="partnerDao" />
        <property name="partnerSettingsDao" ref="partnerSettingsDao" />
        <property name="partnerUserDao" ref="partnerUserDao" />
        <property name="echoDao" ref="echoDao" />
        <property name="echoMetricsDao" ref="echoMetricsDao" />
        <property name="imageDao" ref="imageDao" />
        <property name="imageService" ref="imageService" />
        <property name="encrypter" ref="encrypter" />
        <property name="transactionTemplate" ref="transactionTemplate" />
        <property name="emailService" ref="emailService" />
        <property name="cacheManager" ref="cacheManager" />
    </bean>


    <bean
            id="partnerServiceManagerActor"
            class="com.echoed.chamber.services.partner.PartnerServiceManagerActor"
            parent="partnerServiceBean">
        <property name="cloudPartners" ref="cloudPartners" />
    </bean>


    <bean
            id="shopifyPartnerServiceManagerActor"
            class="com.echoed.chamber.services.partner.shopify.ShopifyPartnerServiceManagerActor"
            parent="partnerServiceBean">
        <property name="shopifyAccess" ref="shopifyAccess" />
        <property name="partnerServiceManager" ref="partnerServiceManager" />
        <property name="shopifyPartnerDao" ref="shopifyPartnerDao" />
        <property name="properties" ref="shopifyProperties" />
    </bean>


    <bean
            id="shopifyAccessActor"
            class="com.echoed.chamber.services.partner.shopify.ShopifyAccessActor"
            parent="actorBean">
        <property name="properties" ref="shopifyProperties" />
    </bean>

    
    <bean
            id="networkSolutionsPartnerServiceManagerActor"
            class="com.echoed.chamber.services.partner.networksolutions.NetworkSolutionsPartnerServiceManagerActor"
            parent="partnerServiceBean">
        <property name="networkSolutionsAccess" ref="networkSolutionsAccess" />
        <property name="partnerServiceManager" ref="partnerServiceManager" />
        <property name="networkSolutionsPartnerDao" ref="networkSolutionsPartnerDao" />
        <property name="properties" ref="networkSolutionsProperties" />
    </bean>


    <bean
            id="networkSolutionsDispatchAccessActor"
            class="com.echoed.chamber.services.partner.networksolutions.NetworkSolutionsDispatchAccessActor"
            parent="actorBean">
        <property name="properties" ref="networkSolutionsProperties" />
        <property name="client" ref="httpClient" />
    </bean>


    <bean
            id="bigCommercePartnerServiceManagerActor"
            class="com.echoed.chamber.services.partner.bigcommerce.BigCommercePartnerServiceManagerActor"
            parent="partnerServiceBean">
        <property name="bigCommerceAccess" ref="bigCommerceAccess" />
        <property name="partnerServiceManager" ref="partnerServiceManager" />
        <property name="bigCommercePartnerDao" ref="bigCommercePartnerDao" />
        <property name="properties" ref="bigCommerceProperties" />
    </bean>


    <bean
            id="bigCommerceAccessActor"
            class="com.echoed.chamber.services.partner.bigcommerce.BigCommerceAccessActor"
            parent="actorBean">
        <property name="client" ref="httpClient" />
    </bean>


    <bean
            id="magentoGoPartnerServiceManagerActor"
            class="com.echoed.chamber.services.partner.magentogo.MagentoGoPartnerServiceManagerActor"
            parent="partnerServiceBean">
        <property name="magentoGoAccess" ref="magentoGoAccess" />
        <property name="partnerServiceManager" ref="partnerServiceManager" />
        <property name="magentoGoPartnerDao" ref="magentoGoPartnerDao" />
        <property name="properties" ref="magentoGoProperties" />
    </bean>


    <bean
            id="magentoGoAccessActor"
            class="com.echoed.chamber.services.partner.magentogo.MagentoGoAccessActor"
            parent="actorBean">
        <property name="client" ref="httpClient" />
        <property name="cacheManager" ref="cacheManager" />
    </bean>


    <bean
            id="facebookPostCrawlerActor"
            class="com.echoed.chamber.services.facebook.FacebookPostCrawlerActor"
            parent="actorBean">
        <property name="facebookPostDao" ref="facebookPostDao" />
        <property name="facebookLikeDao" ref="facebookLikeDao" />
        <property name="facebookCommentDao" ref="facebookCommentDao" />
        <property name="facebookAccess" ref="facebookAccess" />
    </bean>


    <bean
            id="geoLocationServiceActor"
            class="com.echoed.chamber.services.geolocation.GeoLocationServiceActor"
            parent="actorBean">
        <property name="geoLocationDao" ref="geoLocationDao" />
        <property name="properties" ref="geoLocationProperties" />
    </bean>


    <bean
            id="feedServiceActor"
            class="com.echoed.chamber.services.feed.FeedServiceActor"
            parent="actorBean">
        <property name="feedDao" ref="feedDao" />
    </bean>

</beans>
