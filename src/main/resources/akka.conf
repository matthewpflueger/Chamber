akka {
    # Akka version, checked against the runtime version of Akka.
    version = "1.2"

    # Comma separated list of the enabled modules. Options: ["remote", "camel", "http", "stm"]
    enabled-modules = []

    # Time unit for all timeout properties throughout the config
    time-unit = "seconds"

    # event handlers to register at boot time (EventHandler$DefaultListener logs to STDOUT)
    event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
    # Options: ERROR, WARNING, INFO, DEBUG
    #event-handler-level = "INFO"

    # These boot classes are loaded (and created) automatically when the Akka Microkernel boots up
    #     Can be used to bootstrap your application(s)
    #     Should be the FQN (Fully Qualified Name) of the boot class which needs to have a default constructor
    # boot = ["sample.camel.Boot",
    #         "sample.rest.java.Boot",
    #         "sample.rest.scala.Boot",
    #         "sample.security.Boot"]
    boot = []

    actor {
        timeout = 5                        # Default timeout for Future based invocations
                                           #    - Actor:        ?
                                           #    - UntypedActor: sendRequestReply && sendRequestReplyFuture
                                           #    - TypedActor:   methods with non-void return type
        serialize-messages = off           # Does a deep clone of (non-primitive) messages to ensure immutability
        throughput = 5                     # Default throughput for all ExecutorBasedEventDrivenDispatcher, set to 1 for complete fairness
        throughput-deadline-time = -1      # Default throughput deadline for all ExecutorBasedEventDrivenDispatcher, set to 0 or negative for no deadline
        dispatcher-shutdown-timeout = 1    # Using the akka.time-unit, how long dispatchers by default will wait for new actors until they shut down

        default-dispatcher {
            type = "GlobalExecutorBasedEventDriven" # Must be one of the following, all "Global*" are non-configurable
                                                    #   - ExecutorBasedEventDriven
                                                    #   - ExecutorBasedEventDrivenWorkStealing
                                                    #   - GlobalExecutorBasedEventDriven
            keep-alive-time = 60             # Keep alive time for threads
            core-pool-size-factor = 2.0      # No of core threads ... ceil(available processors * factor)
            max-pool-size-factor  = 6.0      # Max no of threads ... ceil(available processors * factor)
            executor-bounds = -1             # Makes the Executor bounded, -1 is unbounded
            allow-core-timeout = on          # Allow core threads to time out
            rejection-policy = "caller-runs" # abort, caller-runs, discard-oldest, discard
            throughput = 5                   # Throughput for ExecutorBasedEventDrivenDispatcher, set to 1 for complete fairness
            throughput-deadline-time = -1    # Throughput deadline for ExecutorBasedEventDrivenDispatcher, set to 0 or negative for no deadline
            mailbox-capacity = -1            # If negative (or zero) then an unbounded mailbox is used (default)
                                             # If positive then a bounded mailbox is used and the capacity is set using the property
                                             # NOTE: setting a mailbox to 'blocking' can be a bit dangerous,
                                             #       could lead to deadlock, use with care
                                             #
                                             # The following are only used for ExecutorBasedEventDriven
                                             # and only if mailbox-capacity > 0
            mailbox-push-timeout-time = 10   # Specifies the timeout to add a new message to a mailbox that is full - negative number means infinite timeout
                                             #       (in unit defined by the time-unit property)
        }
    }

    stm {
        fair             = on     # Should global transactions be fair or non-fair (non fair yield better performance)
        max-retries      = 1000
        timeout          = 5      # Default timeout for blocking transactions and transaction set (in unit defined by
                                  #     the time-unit property)
        write-skew       = true
        blocking-allowed = false
        interruptible    = false
        speculative      = true
        quick-release    = true
        propagation      = "requires"
        trace-level      = "none"
    }

}
